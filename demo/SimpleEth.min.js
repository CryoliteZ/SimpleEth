(function($){const util={metamaskLoginStatus:function(callback){web3.eth.getAccounts(function(err,accounts){if(err!=null){console.error("An error occurred: "+err);callback({login:!1})}else if(accounts.length==0){console.log("User is not logged in to MetaMask");callback({login:!1})}else{callback({login:!0,accounts:accounts})}})},ascii2byte:function(str){return str.split('').map(function(c){return c.charCodeAt(0).toString(16)}).join("")}}
$.fn.SimpleEth=function(options,_callback=null){const _self=this;let _options={to:'0xffb219f6781e7111f89f234c97807aae4255c59d',value:web3.toWei(0,'ether'),gas:21000,gasPrice:web3.toWei(20,'gwei'),data:'',callback:null};for(let key in options){if(options.hasOwnProperty(key)&&_options.hasOwnProperty(key)){if(key=='value'){_options[key]=web3.toWei(options[key],'ether')}
else if(key=='gasPrice'){_options[key]=web3.toWei(options[key],'gwei')}
else if(key=='data'){_options[key]=_options[key]+util.ascii2byte(options[key])}else{_options[key]=options[key]}}}
_self.each(function(){$(this).click(function(){if(options['$value']){let reg_number=/^[+-]?\d+(\.\d+)?$/;let $val=options['$value'].val();if(reg_number.test($val)){_options.value=web3.toWei($val,'ether')}}
if(options['$data']){_options.data=util.ascii2byte(options['$data'].val())}
_options.gas=(_options.gas>21000+68*(_options.data.length-2))?_options.gas:21000+68*(_options.data.length-2);util.metamaskLoginStatus(function(status){if(status.login){if(options.from){_options.from=options.from}else{_options.from=status.accounts[0]}
web3.eth.sendTransaction(_options,function(error,result){console.log({options:_options,TxHash:result,err:error,login:!0});if(_callback){_callback({options:_options,TxHash:result,err:error,login:!0})}
else{console.log({'TxHash':result})}})}else{if(_options.callback){_callback({options:_options,login:!1})}
console.log("Cannot send transaction")}})})})}}(jQuery))